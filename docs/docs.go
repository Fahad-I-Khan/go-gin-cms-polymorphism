// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://localhost:8000/support   // Local URL for your development environment",
            "email": "support@localhost.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/articles": {
            "get": {
                "description": "Retrieve a list of all articles, including their tags and comments.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "List all articles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Article"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new article to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Create a new article",
                "parameters": [
                    {
                        "description": "Article Data",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Article"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Article"
                        }
                    }
                }
            }
        },
        "/api/v1/articles/{id}": {
            "put": {
                "description": "Update the details of an article by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Articles"
                ],
                "summary": "Update an article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Article Data",
                        "name": "article",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Article"
                        }
                    }
                }
            }
        },
        "/api/v1/videos": {
            "get": {
                "description": "Retrieve a list of all videos, including their tags and comments.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "List all videos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Video"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new video to the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Create a new video",
                "parameters": [
                    {
                        "description": "Video Data",
                        "name": "video",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Video"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Video"
                        }
                    }
                }
            }
        },
        "/api/v1/videos/{id}": {
            "put": {
                "description": "Update the details of a video by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Update a video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Video Data",
                        "name": "video",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Video"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Video"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Article": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Comment"
                    }
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "description": "In Postman it failed to set value and because of this ID, Taggable, Commentable also failed when it was set to string type.",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "In Postman it failed to set value and because of this ID, Taggable, Commentable also failed when it was set to string type.",
                    "type": "string"
                }
            }
        },
        "main.Comment": {
            "type": "object",
            "properties": {
                "commentableID": {
                    "type": "integer"
                },
                "commentableType": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "description": "In Postman it failed to set value and because of this ID, Taggable, Commentable also failed when it was set to string type.",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "In Postman it failed to set value and because of this ID, Taggable, Commentable also failed when it was set to string type.",
                    "type": "string"
                }
            }
        },
        "main.Tag": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "In Postman it failed to set value and because of this ID, Taggable, Commentable also failed when it was set to string type.",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "taggableID": {
                    "type": "integer"
                },
                "taggableType": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "In Postman it failed to set value and because of this ID, Taggable, Commentable also failed when it was set to string type.",
                    "type": "string"
                }
            }
        },
        "main.Video": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Comment"
                    }
                },
                "createdAt": {
                    "description": "In Postman it failed to set value and because of this ID, Taggable, Commentable also failed when it was set to string type.",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "description": "In Postman it failed to set value and because of this ID, Taggable, Commentable also failed when it was set to string type.",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "CMS API",
	Description:      "API for managing articles, videos, tags, and comments.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
